// prisma/schema.prisma
// Schéma Prisma complet avec les modèles de blog

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id
  email     String    @unique
  username  String    @unique
  name      String?
  createdAt DateTime  @default(now())
  posts     Post[]
  comments  Comment[]
}

model Post {
  id          String     @id @default(uuid())
  title       String
  slug        String     @unique
  content     String
  excerpt     String?
  published   Boolean    @default(false)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  authorId    String
  author      User       @relation(fields: [authorId], references: [id])
  categories  Category[] @relation("PostToCategory")
  comments    Comment[]
  tags        Tag[]      @relation("PostToTag")
  featuredImage String?
}

model Category {
  id          String    @id @default(uuid())
  name        String    @unique
  slug        String    @unique
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  posts       Post[]    @relation("PostToCategory")
}

model Tag {
  id        String   @id @default(uuid())
  name      String   @unique
  slug      String   @unique
  createdAt DateTime @default(now())
  posts     Post[]   @relation("PostToTag")
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean  @default(true)
  postId    String
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  authorId  String
  author    User     @relation(fields: [authorId], references: [id])
  parentId  String?
  parent    Comment? @relation("CommentToComment", fields: [parentId], references: [id])
  replies   Comment[] @relation("CommentToComment")
}

model AccountRequest {
  id          String    @id @default(uuid())
  username    String
  email       String
  firstName   String?
  lastName    String?
  reason      String?
  status      String    @default("pending") // "pending", "approved", "rejected"
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  approvedBy  String?
  approvedAt  DateTime?
}